# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH
#exec /bin/bash --rcfile /projects/.bashrc

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"
#ZSH_THEME="wezm"
#ZSH_THEME="agnoster"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
 HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
 DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git
         zsh-completions
         zsh-autosuggestions
         zsh-syntax-highlighting
         colored-man-pages
         zsh-history-substring-search
     )

#Zsh Auto completions
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

#Fix color for auto suggessions
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=242'

source $ZSH/oh-my-zsh.sh

#Zsh autocomplete
autoload -Uz compinit && compinit

# partial completion suggestions
zstyle ':completion:*' list-suffixesâ€©
zstyle ':completion:*' expand prefix suffix

zstyle ':completion:*' group-name ''

# History substring search
bindkey '^[[1;5A' history-substring-search-up #ctrl+Up
bindkey '^[[1;5B' history-substring-search-down #ctrl+Down

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
#alias grep="grep --color=always"

#
# History 
#
export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=10000000
export SAVEHIST=10000000

#setopt EXTENDED_HISTORY          # Save time info along with command
setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.

alias h="history"
alias c="clear"
alias szsh="source ~/.zshrc"
alias rp="realpath"

alias exa="exa --color=always"
alias exat="exa --tree --level=10"
alias exam="exa -lh --accessed --modified --created"

export is_snps_cloud=$(echo $HOSTNAME | grep synopsys | wc -l)

if [[ ! $is_snps_cloud ]]; then
    #
    # History 
    #
    export HISTFILE="$HOME/.zsh_history"
    export HISTSIZE=10000000
    export SAVEHIST=10000000
    
    #setopt EXTENDED_HISTORY          # Save time info along with command
    setopt HIST_EXPIRE_DUPS_FIRST    # Expire a duplicate event first when trimming history.
    setopt HIST_FIND_NO_DUPS         # Do not display a previously found event.
    setopt HIST_IGNORE_ALL_DUPS      # Delete an old recorded event if a new event is a duplicate.
    setopt HIST_IGNORE_DUPS          # Do not record an event that was just recorded again.
    setopt HIST_IGNORE_SPACE         # Do not record an event starting with a space.
    setopt HIST_SAVE_NO_DUPS         # Do not write a duplicate event to the history file.
    setopt SHARE_HISTORY             # Share history between all sessions.
    setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.

    alias h="history"
    alias c="clear"
    alias szsh="source ~/.zshrc"
    alias rp="realpath"

    ### PROJECT Section
    alias get_interactiveA="qsub -q normal.q -b y -V -now n dbus-launch /grid/common/pkgs/alacritty/v0.12/bin/alacritty"
    alias get_normalA="qsub -q normal.q -b y -V -now n dbus-launch /grid/common/pkgs/alacritty/v0.12/bin/alacritty"
    alias get_backendA="qsub -q normal.q -b y -V -now n dbus-launch /grid/common/pkgs/alacritty/v0.12/bin/alacritty"
    
    export WA=/proj/aetos/lmareddy
    alias cdwa="cd $WA"
    alias waves="verisium -db xrun_results/myDB.db"
    
    alias loggrep="grep core._mon xrun_results/xrun_run.log | grep "
    
    
    ###Cadence Cloud section
    export http_proxy="http://aw07-proxy:3129"
    
    export MY_TOOLS=/proj/aetos/lmareddy/tools
    export PATH=/grid/common/pkgs/the_silver_searcher/latest/bin:$PATH
    export PATH=/grid/common/pkgs/ripgrep/v13.0.0/bin:$PATH
    export PATH=/grid/common/pkgs/meld/v3.14.2/bin:$PATH
    export PATH=/grid/common/pkgs/bat/v0.24:$PATH
    export PATH=/grid/common/pkgs/vim/v9.0-adv/bin:$PATH
    export PATH=/grid/common/pkgs/ncdu/v2.3/bin:$PATH
    export PATH=/grid/common/pkgs/tmux/v3.3a/bin:$PATH
    export PATH=/grid/common/pkgs/xclip/latest/bin:$PATH
    export PATH=/grid/common/pkgs/firefox/latest:$PATH
    export PATH=/grid/common/pkgs/alacritty/v0.12/bin:$PATH
    export PATH=$MY_TOOLS/zoxide:$PATH
    export PATH=$MY_TOOLS/zellij:$PATH
    export PATH=$MY_TOOLS/fzf/bin:$PATH
    export PATH=$MY_TOOLS/exa/bin:$PATH
    
    export TERM=xterm-256color
    export TMUX_TMPDIR=~/tmux-sessions
    
    export TMPDIR=$REGRESS_OUT/tmp
    
    function module {
        export _prompt="$prompt";
        export prompt="";
        eval "$(/apps/modules-v3.2.6a-64bit/Modules/bin/modulecmd bash "$@")";
        export _exit=$status; 
        export prompt="$_prompt";
        unset _prompt; 
        #test 0 = $_exit;
    }
    
    eval "$(zoxide init zsh)"
    alias cd="z"
    
    [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
    export FZF_DEFAULT_COMMAND='rg --files --follow --no-ignore-vcs --hidden'
    export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
    
    [ -f $WA/hw-core-env.bash ] && source $WA/hw-core-env.bash

else

    source /global/etc/modules/$MODULE_VERSION/init/zsh
    
    export WA=/projects/lmareddy
    alias cdwa="cd $WA"
    alias senv="source cfg/snps_migr/env.bash"
    
    alias get_001_kitty="bsub -XF -app shared-0001 dbus-run-session kitty"
    alias get_inter_kitty="bsub -XF -app shared-intQ dbus-run-session kitty"
    alias switch_svc="sudo su - svc_imachines"

    module load git/2.31.8
    module load vim
    module load tmux
    module load meld
    module load htop
    module unload python/3.6.3
  
    function setprj {
      if [ -z "$1" ]; then
        export _repo_dir="$(basename "$PWD")";
      else
        export _repo_dir=$1;
      fi
      cd $WA/$_repo_dir*;
      source cfg/snps_migr/env.bash
      alias cdr="cd $REPO_ROOT"
      unset _repo_dir;
    }

    function waves {
      if [ -z "$1" ]; then
        export _fsdb_dir="$(ls -rt results/CORE/ae_run | tail -n 1)"
        export _fsdb_path=results/CORE/ae_run/$_fsdb_dir/novas.fsdb
      else
        export _fsdb_dir=$1
        export _fsdb_path=$_fsdb_dir/novas.fsdb
      fi
      echo "Opening waveform from: $_fsdb_path"
      verdi -nologo -ssf $_fsdb_path
      unset _fsdb_path;
      unset _fsdb_dir;
    }
    
    function tile_waves {
      if [ -z "$1" ]; then
        export _fsdb_dir="$(ls -rt results/CPU_TILE/ae_run | tail -n 1)"
        export _fsdb_path=results/CPU_TILE/ae_run/$_fsdb_dir/novas.fsdb
      else
        export _fsdb_dir=$1
        export _fsdb_path=$_fsdb_dir/novas.fsdb
      fi
      echo "Opening waveform from: $_fsdb_path"
      verdi -nologo -ssf $_fsdb_path
      unset _fsdb_path;
      unset _fsdb_dir;
    }

    function failed_tests {
      if [ -z "$1" ]; then
        export _regr_root=$PWD
      else
        export _regr_root=$1
      fi

      for dir in $_regr_root/*; do 
        if [ ! -f $dir/PASS ] && [ ! -f $dir/PASS ]; then
          echo $dir
        fi
      done
      unset _regr_root;
    }

    function failed_push_tests {
      if [ -z "$1" ]; then
        export _regr_root=$PWD
      else
        export _regr_root=$1
      fi
      failed_tests $_regr_root/results/CORE/ae_run
      failed_tests $_regr_root/results/CPU_TILE/ae_run
      failed_tests $_regr_root/results/MEM_TB/ae_run
      unset _regr_root;
    }
    
    function pushq_status {
      echo "Current Push reservations"
      #bjobs -u all | rg --ignore-case PUSH_reser
      bjobs -u all -o "JOBID: user:15 name:25 stat: submit_time:15 start_time:15 run_time:15 Application: queue:15 mem::MB max_mem::MB cpu_peak" -J push_reservation
      echo
      echo "Current Regression status"
      export _pend_jobs=$(bjobs -u all | rg PUSH_REGR | rg PEND | wc -l)
      export _run_jobs=$(bjobs -u all | rg PUSH_REGR | rg RUN | wc -l)
      echo "Pending Jobs: $_pend_jobs       Running Jobs: $_run_jobs"
      echo 
      if [ "$1" = "full" ]; then
        bjobs -u all -o "JOBID: user:15 name:25 stat: submit_time:15 start_time:15 run_time:15 Application: queue:15 mem::MB max_mem::MB cpu_peak" -J PUSH_REGR
      fi
      unset _pend_jobs;
      unset _run_jobs;
   }

   function wait_push {
     export _num_jobs=$(bjobs -u all | rg --ignore-case PUSH_reser | wc -l)
     if [ "$_num_jobs" = "0" ]; then
       make push
     else
       echo "pushq is busy"
       sleep 30;
       wait_push
     fi
   }
        
    export TMUX_TMPDIR=/SCRATCH/$USER/tmp

    alias clean="make clean; make clean_push; rm -rf bsub*; rm -rf PUSH*; rm -rf verdiLog; rm -rf signal.rc; rm -rf novas* "

    #My tools
    export MY_TOOLS=/projects/lmareddy/tools
    export PATH=$MY_TOOLS/bat:$PATH
    export PATH=$MY_TOOLS/exa/bin:$PATH
    export PATH=$MY_TOOLS/fd:$PATH
    export PATH=$MY_TOOLS/fasder:$PATH
    export PATH=$MY_TOOLS/fzf/bin:$PATH
    export PATH=$MY_TOOLS/kitty/bin:$PATH
    export PATH=$MY_TOOLS/ncdu:$PATH
    export PATH=$MY_TOOLS/ripgrep:$PATH
    export PATH=$MY_TOOLS/zoxide:$PATH

    ##Place for my custom scripts
    export PATH=$MY_TOOLS/bin:$PATH

    #setup Zoxide
    eval "$(zoxide init zsh)"
    alias cd="z"

    # Setup fzf
    eval "$(fzf --zsh)"

    export FZF_DEFAULT_COMMAND='rg --files --follow --no-ignore-vcs --hidden'
    export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'

fi	
